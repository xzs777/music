{"remainingRequest":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\src\\components\\newmusic\\Newmusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\src\\components\\newmusic\\Newmusic.vue","mtime":1593438612000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9Vc2Vycy83NDAzMS9EZXNrdG9wL1x1NjVCMFx1NUVGQVx1NjU4N1x1NEVGNlx1NTkzOSAoNCkvdnVlX211c2ljLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdEluZGV4OiAwLAogICAgICB0eXBlTGlzdDogW3sKICAgICAgICBuYW1lOiAn5YWo6YOoJywKICAgICAgICB0eXBlOiAwCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5Y2O6K+tJywKICAgICAgICB0eXBlOiA3CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5qyn576OJywKICAgICAgICB0eXBlOiA5NgogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+aXpeacrCcsCiAgICAgICAgdHlwZTogOAogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+mfqeWbvScsCiAgICAgICAgdHlwZTogMTYKICAgICAgfV0sCiAgICAgIG11c2ljbGlzdDogW10sCiAgICAgIG11c2ljZGF0YTogW10sCiAgICAgIHF1ZXJ5TnVtOiAxMCwKICAgICAgc2Nyb2xsU3RhdHVzOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxpc3RjaGFuZ2U6IGZ1bmN0aW9uIGxpc3RjaGFuZ2UoaXRlbSkgewogICAgICB0aGlzLmxpc3RJbmRleCA9IGl0ZW07CiAgICAgIHRoaXMuZ2V0TXVzaWNMaXN0KHRoaXMudHlwZUxpc3RbaXRlbV0udHlwZSk7CiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluLXNvbmctbGlzdCcpLnNjcm9sbFRvKDAsIDApOwogICAgfSwKICAgIGdldE11c2ljTGlzdDogZnVuY3Rpb24gZ2V0TXVzaWNMaXN0KCkgewogICAgICB2YXIgX2FyZ3VtZW50cyA9IGFyZ3VtZW50cywKICAgICAgICAgIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHR5cGUsIF95aWVsZCRfdGhpcyQkcmVxdWVzdCwgcmVzLCBhcnJEYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0eXBlID0gX2FyZ3VtZW50c1swXSA9PT0gdW5kZWZpbmVkID8gMCA6IF9hcmd1bWVudHNbMF07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kcmVxdWVzdC5nZXQoIi90b3Avc29uZz90eXBlPSIuY29uY2F0KHR5cGUpKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzJCRyZXF1ZXN0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpcyQkcmVxdWVzdC5kYXRhOwogICAgICAgICAgICAgICAgYXJyRGF0YSA9IFtdOwogICAgICAgICAgICAgICAgcmVzLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICB2YXIgYXJyID0ge307CiAgICAgICAgICAgICAgICAgIGFyci5uYW1lID0gaXRlbS5uYW1lOwogICAgICAgICAgICAgICAgICBhcnIucGljID0gaXRlbS5hbGJ1bS5waWNVcmw7CiAgICAgICAgICAgICAgICAgIGFyci5hdXRob3IgPSBbXTsKICAgICAgICAgICAgICAgICAgaXRlbS5hcnRpc3RzLmZvckVhY2goZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgICBhcnIuYXV0aG9yLnB1c2goaS5uYW1lKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGFyci5pZCA9IGl0ZW0uaWQ7CiAgICAgICAgICAgICAgICAgIGFyci50aW1lID0gTWF0aC5mbG9vcihpdGVtLmR1cmF0aW9uICUgMzYwMDAwMCAvIDYwMDAwKSA+IDEwID8gTWF0aC5mbG9vcihpdGVtLmR1cmF0aW9uICUgMzYwMDAwMCAvIDYwMDAwKSA6ICcwJyArIE1hdGguZmxvb3IoaXRlbS5kdXJhdGlvbiAlIDM2MDAwMDAgLyA2MDAwMCk7CiAgICAgICAgICAgICAgICAgIGFyci50aW1lICs9ICc6JyArIChNYXRoLmZsb29yKGl0ZW0uZHVyYXRpb24gJSA2MDAwMCAvIDEwMDApID4gMTAgPyBNYXRoLmZsb29yKGl0ZW0uZHVyYXRpb24gJSA2MDAwMCAvIDEwMDApIDogJzAnICsgTWF0aC5mbG9vcihpdGVtLmR1cmF0aW9uICUgNjAwMDAgLyAxMDAwKSk7CiAgICAgICAgICAgICAgICAgIGFyci5hbGJ1bSA9IGl0ZW0uYWxidW0ubmFtZTsKICAgICAgICAgICAgICAgICAgYXJyRGF0YS5wdXNoKGFycik7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzLm11c2ljZGF0YSA9IGFyckRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5tdXNpY2xpc3QgPSBfdGhpcy5nZXRBcnJheURhdGEoYXJyRGF0YSwgMSwgMTApOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g6I635Y+W6Z+z5LmQ5pKt5pS+5Zyw5Z2ACiAgICBnZXRNdXNpY1VybDogZnVuY3Rpb24gZ2V0TXVzaWNVcmwob2JqKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpczIkJHJlcXVlcywgcmVzLCBtdXNpYzsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJHJlcXVlc3QuZ2V0KCIvc29uZy91cmw/aWQ9Ii5jb25jYXQob2JqLmlkKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczIkJHJlcXVlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzMiQkcmVxdWVzLmRhdGE7CiAgICAgICAgICAgICAgICBtdXNpYyA9IHt9OwogICAgICAgICAgICAgICAgbXVzaWMgPSB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiBvYmoubmFtZSwKICAgICAgICAgICAgICAgICAgYXJ0aXN0OiBvYmouYXV0aG9yLmpvaW4oJyAnKSwKICAgICAgICAgICAgICAgICAgc3JjOiByZXMuZGF0YVswXS51cmwsCiAgICAgICAgICAgICAgICAgIHBpYzogb2JqLnBpYywKICAgICAgICAgICAgICAgICAgaWQ6IG9iai5pZAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdub3dNdXNpYycsIEpTT04uc3RyaW5naWZ5KG11c2ljKSk7CgogICAgICAgICAgICAgICAgX3RoaXMyLiRzdG9yZS5kaXNwYXRjaCgnZGVhbEF1dG9QbGF5JywgbXVzaWMpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDmlbDnu4Tmj5Dlj5bpg6jliIbmlbDmja4KICAgIGdldEFycmF5RGF0YTogZnVuY3Rpb24gZ2V0QXJyYXlEYXRhKGRhdGEsIHN0YXJ0LCBudW0pIHsKICAgICAgdmFyIHJlcyA9IFtdOwogICAgICB2YXIgbGVuZ3RoID0gc3RhcnQgKyBudW0gLSAxID4gZGF0YS5sZW5ndGggPyBkYXRhLmxlbmd0aCA6IHN0YXJ0ICsgbnVtIC0gMTsKCiAgICAgIGZvciAodmFyIGkgPSBzdGFydCAtIDE7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIHJlcy5wdXNoKGRhdGFbaV0pOwogICAgICB9CgogICAgICByZXR1cm4gcmVzOwogICAgfSwKICAgIGxpc3RlblNjcm9sbDogZnVuY3Rpb24gbGlzdGVuU2Nyb2xsKGUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgc2Nyb2xsID0gKGUudGFyZ2V0LnNjcm9sbFRvcCAvIChlLnRhcmdldC5zY3JvbGxIZWlnaHQgLSBlLnRhcmdldC5jbGllbnRIZWlnaHQpKS50b0ZpeGVkKDMpOwoKICAgICAgaWYgKHNjcm9sbCA+IDAuOTUgJiYgIXRoaXMuc2Nyb2xsU3RhdHVzKSB7CiAgICAgICAgdGhpcy5zY3JvbGxTdGF0dXMgPSB0cnVlOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKF90aGlzMy5xdWVyeU51bSA8IDEwMCkgewogICAgICAgICAgICBfdGhpczMucXVlcnlOdW0gKz0gMTA7CiAgICAgICAgICAgIF90aGlzMy5tdXNpY2xpc3QgPSBfdGhpczMuZ2V0QXJyYXlEYXRhKF90aGlzMy5tdXNpY2RhdGEsIDEsIF90aGlzMy5xdWVyeU51bSk7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIGUudGFyZ2V0LnNjcm9sbFRvKDAsIChfdGhpczMucXVlcnlOdW0gLSAxMCkgKiA3NSAtIGUudGFyZ2V0LmNsaWVudEhlaWdodCk7CiAgICAgICAgICAgICAgX3RoaXMzLnNjcm9sbFN0YXR1cyA9IGZhbHNlOwogICAgICAgICAgICB9LCAxMCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgMTUwMCk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldE11c2ljTGlzdCgpOwogIH0KfTs="},{"version":3,"sources":["Newmusic.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"new-list\">\n      <ul class=\"new-header-list\">\n        <li\n          v-for=\"(item,i) in typeList\"\n          :key=\"i\"\n          :class=\"listIndex === i ? 'select' : ''\"\n          @click=\"listchange(i)\"\n        >{{item.name}}</li>\n      </ul>\n      <el-button type=\"danger\" size=\"mini\" @click=\"playMusicAtonce(musiclist)\">立即播放</el-button>\n    </div>\n    <div\n      class=\"main-song-list\"\n      style=\"height:360px;overflow:hidden scroll;width:790px\"\n      @scroll=\"listenScroll\"\n    >\n      <el-table\n        :data=\"musiclist\"\n        style=\"width: 100%;\"\n        :stripe=\"true\"\n        @row-click=\"getMusicUrl\"\n        :show-header=\"false\"\n      >\n        <el-table-column type=\"index\" width=\"60px\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"音乐标题\">\n          <template slot-scope=\"scoped\">\n            <div class=\"music-img-title\">\n              <el-image :src=\"scoped.row.pic\">\n                <div slot=\"placeholder\" class=\"image-slot\">\n                  <i class=\"el-icon-picture\" style=\"font-size:50px;color:#f1f1f1\"></i>\n                </div>\n              </el-image>\n              <span>{{scoped.row.name}}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"author\" label=\"歌手\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <span v-for=\"(item,i) in scope.row.author\" :key=\"i\">{{item + ' '}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"album\" label=\"专辑\" width=\"180\"></el-table-column>\n        <el-table-column prop=\"time\" label=\"时长\" width=\"100\"></el-table-column>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      listIndex: 0,\n      typeList: [\n        { name: '全部', type: 0 },\n        { name: '华语', type: 7 },\n        { name: '欧美', type: 96 },\n        { name: '日本', type: 8 },\n        { name: '韩国', type: 16 }\n      ],\n      musiclist: [],\n      musicdata: [],\n      queryNum: 10,\n      scrollStatus: false\n    }\n  },\n  methods: {\n    listchange(item) {\n      this.listIndex = item\n      this.getMusicList(this.typeList[item].type)\n      document.querySelector('.main-song-list').scrollTo(0, 0)\n    },\n    async getMusicList() {\n      const type = arguments[0] === undefined ? 0 : arguments[0]\n      const { data: res } = await this.$request.get(`/top/song?type=${type}`)\n      const arrData = []\n      res.data.forEach(item => {\n        const arr = {}\n        arr.name = item.name\n        arr.pic = item.album.picUrl\n        arr.author = []\n        item.artists.forEach(i => {\n          arr.author.push(i.name)\n        })\n        arr.id = item.id\n        arr.time =\n          Math.floor((item.duration % 3600000) / 60000) > 10\n            ? Math.floor((item.duration % 3600000) / 60000)\n            : '0' + Math.floor((item.duration % 3600000) / 60000)\n        arr.time +=\n          ':' +\n          (Math.floor((item.duration % 60000) / 1000) > 10\n            ? Math.floor((item.duration % 60000) / 1000)\n            : '0' + Math.floor((item.duration % 60000) / 1000))\n        arr.album = item.album.name\n        arrData.push(arr)\n      })\n      this.musicdata = arrData\n      this.musiclist = this.getArrayData(arrData, 1, 10)\n    },\n    // 获取音乐播放地址\n    async getMusicUrl(obj) {\n      const { data: res } = await this.$request.get(`/song/url?id=${obj.id}`)\n      let music = {}\n      music = {\n        title: obj.name,\n        artist: obj.author.join(' '),\n        src: res.data[0].url,\n        pic: obj.pic,\n        id: obj.id\n      }\n      window.sessionStorage.setItem('nowMusic', JSON.stringify(music))\n      this.$store.dispatch('dealAutoPlay', music)\n    },\n    // 数组提取部分数据\n    getArrayData(data, start, num) {\n      const res = []\n      const length =\n        start + num - 1 > data.length ? data.length : start + num - 1\n      for (var i = start - 1; i < length; i++) {\n        res.push(data[i])\n      }\n      return res\n    },\n    listenScroll(e) {\n      const scroll = (\n        e.target.scrollTop /\n        (e.target.scrollHeight - e.target.clientHeight)\n      ).toFixed(3)\n      if (scroll > 0.95 && !this.scrollStatus) {\n        this.scrollStatus = true\n        setTimeout(() => {\n          if (this.queryNum < 100) {\n            this.queryNum += 10\n            this.musiclist = this.getArrayData(this.musicdata, 1, this.queryNum)\n            setTimeout(() => {\n              e.target.scrollTo(0, (this.queryNum - 10) * 75 - e.target.clientHeight)\n              this.scrollStatus = false\n            }, 10)\n          }\n        }, 1500)\n      }\n    }\n  },\n  created() {\n    this.getMusicList()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.music-img-title {\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  .el-image {\n    width: 50px;\n    height: 50px;\n    border-radius: 4px;\n    margin-right: 10px;\n  }\n  span {\n    display: inline-block;\n    width: 180px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n}\n.new-list {\n  position: relative;\n  height: 40px;\n  line-height: 40px;\n  .new-header-list {\n    display: block;\n    list-style-type: none;\n    .select {\n      font-weight: 600;\n      color: #000;\n    }\n    li {\n      float: left;\n      margin-right: 15px;\n      font-size: 14px;\n      color: rgba(0, 0, 0, 0.6);\n      cursor: pointer;\n    }\n    li:hover {\n      color: rgba(0, 0, 0, 0.9);\n    }\n  }\n  .el-button {\n    position: absolute;\n    right: 20px;\n    border-radius: 20px;\n    top: 5px;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/newmusic"}]}
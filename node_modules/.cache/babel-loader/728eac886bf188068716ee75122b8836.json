{"remainingRequest":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\src\\components\\songs\\Musiclist.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\src\\components\\songs\\Musiclist.vue","mtime":1593438612000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1605024328000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9Vc2Vycy83NDAzMS9EZXNrdG9wL1x1NjVCMFx1NUVGQVx1NjU4N1x1NEVGNlx1NTkzOSAoNykvbXVzaWMtbWFpbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBOYXZIZWFkZXIgZnJvbSAnLi4vY29tbW9uL05hdmhlYWRlci52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJNc2c6IHsKICAgICAgICBwaWM6ICcnLAogICAgICAgIGF1dGhvcjogJycsCiAgICAgICAgdGltZTogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgZGlzY3JpcHRpb246ICcnLAogICAgICAgIHRhZzogW10KICAgICAgfSwKICAgICAgc29uZ3NMaXN0OiBbXSwKICAgICAgY29ubGxlY3RTdGF0dXM6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgJ25hdi1oZWFkZXInOiBOYXZIZWFkZXIKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluatjOabsuWIl+ihqAogICAgZ2V0UGxheUxpc3Q6IGZ1bmN0aW9uIGdldFBsYXlMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgaWQsIF95aWVsZCRfdGhpcyQkcmVxdWVzdCwgcmVzLCB1c2VyRGF0YSwgYXJyRGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWQgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnc29uZ3NJZCcpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJHJlcXVlc3QuZ2V0KCIvYXJ0aXN0cz9pZD0iLmNvbmNhdChpZCkpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXMkJHJlcXVlc3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzJCRyZXF1ZXN0LmRhdGE7CiAgICAgICAgICAgICAgICAvLyDojrflj5blj5HluIPogIXkv6Hmga/pg6jliIYKICAgICAgICAgICAgICAgIHVzZXJEYXRhID0gewogICAgICAgICAgICAgICAgICBwaWM6IHJlcy5hcnRpc3QucGljVXJsLAogICAgICAgICAgICAgICAgICBuYW1lOiByZXMuYXJ0aXN0Lm5hbWUsCiAgICAgICAgICAgICAgICAgIGRpc2NyaXB0aW9uOiByZXMuYXJ0aXN0LmJyaWVmRGVzYywKICAgICAgICAgICAgICAgICAgYXV0aG9yOiByZXMuYXJ0aXN0Lm5hbWUsCiAgICAgICAgICAgICAgICAgIHRpbWU6IHJlcy5hcnRpc3QucHVibGlzaFRpbWUsCiAgICAgICAgICAgICAgICAgIGZvbGxvd2VkOiByZXMuYXJ0aXN0LmZvbGxvd2VkLAogICAgICAgICAgICAgICAgICBpZDogcmVzLmFydGlzdC5pZAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzLmNvbmxsZWN0U3RhdHVzID0gcmVzLmFydGlzdC5mb2xsb3dlZDsKICAgICAgICAgICAgICAgIF90aGlzLnVzZXJNc2cgPSB1c2VyRGF0YTsKICAgICAgICAgICAgICAgIGFyckRhdGEgPSBbXTsgLy8g6I635Y+W5q2M5puy6YOo5YiGCgogICAgICAgICAgICAgICAgcmVzLmhvdFNvbmdzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgdmFyIGFyciA9IHt9OwogICAgICAgICAgICAgICAgICBhcnIubmFtZSA9IGl0ZW0ubmFtZTsKICAgICAgICAgICAgICAgICAgYXJyLmF1dGhvciA9IFtdOwogICAgICAgICAgICAgICAgICBpdGVtLmFyLmZvckVhY2goZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgICBhcnIuYXV0aG9yLnB1c2goaS5uYW1lKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGFyci5pZCA9IGl0ZW0uaWQ7CiAgICAgICAgICAgICAgICAgIGFyci5hbGJ1bSA9IGl0ZW0uYWwubmFtZTsKICAgICAgICAgICAgICAgICAgYXJyLnBpYyA9IGl0ZW0uYWwucGljVXJsOwogICAgICAgICAgICAgICAgICBhcnIudGltZSA9IE1hdGguZmxvb3IoaXRlbS5kdCAlIDM2MDAwMDAgLyA2MDAwMCkgPiAxMCA/IE1hdGguZmxvb3IoaXRlbS5kdCAlIDM2MDAwMDAgLyA2MDAwMCkgOiAnMCcgKyBNYXRoLmZsb29yKGl0ZW0uZHQgJSAzNjAwMDAwIC8gNjAwMDApOwogICAgICAgICAgICAgICAgICBhcnIudGltZSArPSAnOicgKyAoTWF0aC5mbG9vcihpdGVtLmR0ICUgNjAwMDAgLyAxMDAwKSA+IDEwID8gTWF0aC5mbG9vcihpdGVtLmR0ICUgNjAwMDAgLyAxMDAwKSA6ICcwJyArIE1hdGguZmxvb3IoaXRlbS5kdCAlIDYwMDAwIC8gMTAwMCkpOwogICAgICAgICAgICAgICAgICBhcnJEYXRhLnB1c2goYXJyKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX3RoaXMuc29uZ3NMaXN0ID0gYXJyRGF0YTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDojrflj5bmrYzmm7LlnLDlnYAKICAgIGdldE11c2ljVXJsOiBmdW5jdGlvbiBnZXRNdXNpY1VybChvYmopIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgX3lpZWxkJF90aGlzMiQkcmVxdWVzLCByZXMsIG11c2ljOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kcmVxdWVzdC5nZXQoIi9zb25nL3VybD9pZD0iLmNvbmNhdChvYmouaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJF90aGlzMiQkcmVxdWVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXMyJCRyZXF1ZXMuZGF0YTsKICAgICAgICAgICAgICAgIG11c2ljID0ge307CiAgICAgICAgICAgICAgICBtdXNpYyA9IHsKICAgICAgICAgICAgICAgICAgdGl0bGU6IG9iai5uYW1lLAogICAgICAgICAgICAgICAgICBhcnRpc3Q6IG9iai5hdXRob3Iuam9pbignICcpLAogICAgICAgICAgICAgICAgICBzcmM6IHJlcy5kYXRhWzBdLnVybCwKICAgICAgICAgICAgICAgICAgcGljOiBvYmoucGljLAogICAgICAgICAgICAgICAgICBpZDogb2JqLmlkCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ25vd011c2ljJywgSlNPTi5zdHJpbmdpZnkobXVzaWMpKTsKCiAgICAgICAgICAgICAgICBfdGhpczIuJHN0b3JlLmRpc3BhdGNoKCdkZWFsQXV0b1BsYXknLCBtdXNpYyk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNvbmxsZWN0aW9uU29uZ3M6IGZ1bmN0aW9uIGNvbmxsZWN0aW9uU29uZ3MoaWQsIHN0YXR1cykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLiRyZXF1ZXN0LmdldCgiYXJ0aXN0L3N1Yj9pZD0iLmNvbmNhdChpZCwgIiZ0PSIpLmNvbmNhdChzdGF0dXMpKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gMSkgewogICAgICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2Vzcygn5bey5re75Yqg5pS26JePJyk7CgogICAgICAgICAgICAgICAgICBfdGhpczMuY29ubGxlY3RTdGF0dXMgPSB0cnVlOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMzLmNvbmxsZWN0U3RhdHVzID0gZmFsc2U7CgogICAgICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2Vzcygn5bey5Y+W5raI5pS26JePJyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNjsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+WFiOeZu+W9lScpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgNl1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRQbGF5TGlzdCgpOwogIH0KfTs="},{"version":3,"sources":["Musiclist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <nav-header></nav-header>\n    <div class=\"main-nav\">\n      <div class=\"main-nav-tt\">\n        <img :src=\"userMsg.pic\" alt />\n        <div class=\"main-nav-text\">\n          <div class=\"main-tt-name\">\n            {{userMsg.name}}\n            <el-button\n              round\n              class=\"tt-conlection\"\n              @click=\"conllectionSongs(userMsg.id,2)\"\n              v-if=\"conllectStatus\"\n            >\n              <i class=\"el-icon-folder-checked\"></i> 已收藏\n            </el-button>\n            <el-button round class=\"tt-conlection\" @click=\"conllectionSongs(userMsg.id,1)\" v-else>\n              <i class=\"el-icon-folder-add\"></i> 未收藏\n            </el-button>\n          </div>\n          <div class=\"main-tt-label\">&nbsp;&nbsp;&nbsp;{{userMsg.time| dataFormat}}</div>\n          <div class=\"main-tt-label\">描述: {{userMsg.discription}}</div>\n          <div class=\"main-tt-btn\">\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-video-play\"\n              @click=\"playMusicAtonce(songsList)\"\n            >立即播放</el-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"main-song-list\">\n        <el-table :data=\"songsList\" style=\"width: 100%\" :stripe=\"true\" @row-click=\"getMusicUrl\">\n          <el-table-column type=\"index\" width=\"60px\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"音乐标题\"></el-table-column>\n          <el-table-column prop=\"author\" label=\"歌手\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <span v-for=\"(item,i) in scope.row.author\" :key=\"i\">{{item + ' '}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"album\" label=\"专辑\" width=\"180\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"时长\" width=\"100\"></el-table-column>\n        </el-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavHeader from '../common/Navheader.vue'\nexport default {\n  data() {\n    return {\n      userMsg: {\n        pic: '',\n        author: '',\n        time: '',\n        name: '',\n        discription: '',\n        tag: []\n      },\n      songsList: [],\n      conllectStatus: false\n    }\n  },\n  components: {\n    'nav-header': NavHeader\n  },\n  methods: {\n    // 获取歌曲列表\n    async getPlayList() {\n      const id = window.sessionStorage.getItem('songsId')\n      const { data: res } = await this.$request.get(`/artists?id=${id}`)\n      // 获取发布者信息部分\n      const userData = {\n        pic: res.artist.picUrl,\n        name: res.artist.name,\n        discription: res.artist.briefDesc,\n        author: res.artist.name,\n        time: res.artist.publishTime,\n        followed: res.artist.followed,\n        id: res.artist.id\n      }\n      this.conllectStatus = res.artist.followed\n      this.userMsg = userData\n      const arrData = []\n      // 获取歌曲部分\n      res.hotSongs.forEach(item => {\n        const arr = {}\n        arr.name = item.name\n        arr.author = []\n        item.ar.forEach(i => {\n          arr.author.push(i.name)\n        })\n        arr.id = item.id\n        arr.album = item.al.name\n        arr.pic = item.al.picUrl\n        arr.time =\n          Math.floor((item.dt % 3600000) / 60000) > 10\n            ? Math.floor((item.dt % 3600000) / 60000)\n            : '0' + Math.floor((item.dt % 3600000) / 60000)\n        arr.time +=\n          ':' +\n          (Math.floor((item.dt % 60000) / 1000) > 10\n            ? Math.floor((item.dt % 60000) / 1000)\n            : '0' + Math.floor((item.dt % 60000) / 1000))\n        arrData.push(arr)\n      })\n      this.songsList = arrData\n    },\n    // 获取歌曲地址\n    async getMusicUrl(obj) {\n      const { data: res } = await this.$request.get(`/song/url?id=${obj.id}`)\n      let music = {}\n      music = {\n        title: obj.name,\n        artist: obj.author.join(' '),\n        src: res.data[0].url,\n        pic: obj.pic,\n        id: obj.id\n      }\n      window.sessionStorage.setItem('nowMusic', JSON.stringify(music))\n      this.$store.dispatch('dealAutoPlay', music)\n    },\n    async conllectionSongs(id, status) {\n      try {\n        await this.$request.get(`artist/sub?id=${id}&t=${status}`)\n        if (status === 1) {\n          this.$message.success('已添加收藏')\n          this.conllectStatus = true\n        } else {\n          this.conllectStatus = false\n          this.$message.success('已取消收藏')\n        }\n      } catch (error) {\n        this.$message.error('请先登录')\n      }\n    }\n  },\n  created() {\n    this.getPlayList()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.main-nav .main-nav-tt img {\n  width: 130px !important;\n  height: 130px !important;\n}\n.main-nav .main-tt-name {\n  display: flex;\n  align-items: center;\n}\n.main-nav .main-tt-name span {\n  border: 2px solid red;\n  font-weight: 600;\n  margin-right: 10px;\n  border-radius: 4px;\n  color: red;\n  padding: 0px 10px;\n  font-size: 12px;\n  display: inline-block;\n  height: 18px;\n  line-height: 18px;\n}\n.main-nav .main-nav-tt .main-tt-label {\n  height: 20px;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.6);\n  font-weight: 600;\n  max-width: 300px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.main-nav .main-nav-tt .main-tt-btn {\n  margin-top: 10px;\n}\n.tt-conlection {\n  margin-left: 20px;\n  height: 30px;\n  line-height: 0;\n  font-size: 12px;\n  font-weight: 500;\n  user-select: none;\n  background: #fff !important;\n  border-color: #dcdfe6 !important;\n  color: rgba(0, 0, 0, 0.6) !important;\n  text-indent: 20px;\n  padding: 0 15px !important;\n  position: relative;\n  i {\n    position: absolute;\n    font-size: 16px;\n    left: -5px;\n    top: 5px;\n  }\n}\n.tt-conlection:hover,\n.tt-conlection:active {\n  background: #f1f1f1 !important;\n  border-color: #dcdfe6 !important;\n  color: rgba(0, 0, 0, 0.6) !important;\n}\n</style>\n"],"sourceRoot":"src/components/songs"}]}
{"remainingRequest":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\src\\components\\music\\MusicList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\src\\components\\music\\MusicList.vue","mtime":1593438612000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\music-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1605024328000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZIZWFkZXIgZnJvbSAnLi4vY29tbW9uL05hdmhlYWRlci52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc29uZ3NMaXN0OiBbXQogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgJ25hdi1oZWFkZXInOiBOYXZIZWFkZXIKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluaOqOiNkOihqOWNleatjOabsuWIl+ihqAogICAgYXN5bmMgZ2V0UmVjb21tZW5kTGlzdCgpIHsKICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJHJlcXVlc3QuZ2V0KCdyZWNvbW1lbmQvc29uZ3MnKQogICAgICBjb25zdCBhcnJEYXRhID0gW10KICAgICAgcmVzLnJlY29tbWVuZC5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgIGNvbnN0IGFyciA9IHt9CiAgICAgICAgYXJyLm5hbWUgPSBpdGVtLm5hbWUKICAgICAgICBhcnIuYXV0aG9yID0gW10KICAgICAgICBpdGVtLmFydGlzdHMuZm9yRWFjaChpID0+IHsKICAgICAgICAgIGFyci5hdXRob3IucHVzaChpLm5hbWUpCiAgICAgICAgfSkKICAgICAgICBhcnIuaWQgPSBpdGVtLmlkCiAgICAgICAgYXJyLmFsYnVtID0gaXRlbS5hbGJ1bS5uYW1lCiAgICAgICAgYXJyLnBpYyA9IGl0ZW0uYXJ0aXN0c1swXS5waWNVcmwKICAgICAgICBhcnIudGltZSA9CiAgICAgICAgICBNYXRoLmZsb29yKChpdGVtLmR1cmF0aW9uICUgMzYwMDAwMCkgLyA2MDAwMCkgPiAxMAogICAgICAgICAgICA/IE1hdGguZmxvb3IoKGl0ZW0uZHVyYXRpb24gJSAzNjAwMDAwKSAvIDYwMDAwKQogICAgICAgICAgICA6ICcwJyArIE1hdGguZmxvb3IoKGl0ZW0uZHVyYXRpb24gJSAzNjAwMDAwKSAvIDYwMDAwKQogICAgICAgIGFyci50aW1lICs9CiAgICAgICAgICAnOicgKwogICAgICAgICAgKE1hdGguZmxvb3IoKGl0ZW0uZHVyYXRpb24gJSA2MDAwMCkgLyAxMDAwKSA+IDEwCiAgICAgICAgICAgID8gTWF0aC5mbG9vcigoaXRlbS5kdXJhdGlvbiAlIDYwMDAwKSAvIDEwMDApCiAgICAgICAgICAgIDogJzAnICsgTWF0aC5mbG9vcigoaXRlbS5kdXJhdGlvbiAlIDYwMDAwKSAvIDEwMDApKQogICAgICAgIGFyckRhdGEucHVzaChhcnIpCiAgICAgIH0pCiAgICAgIHRoaXMuc29uZ3NMaXN0ID0gYXJyRGF0YQogICAgfSwKICAgIC8vIOiOt+WPlumfs+S5kOaSreaUvuWcsOWdgAogICAgYXN5bmMgZ2V0TXVzaWNVcmwob2JqKSB7CiAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRyZXF1ZXN0LmdldChgL3NvbmcvdXJsP2lkPSR7b2JqLmlkfWApCiAgICAgIGxldCBtdXNpYyA9IHt9CiAgICAgIG11c2ljID0gewogICAgICAgIHRpdGxlOiBvYmoubmFtZSwKICAgICAgICBhcnRpc3Q6IG9iai5hdXRob3Iuam9pbignICcpLAogICAgICAgIHNyYzogcmVzLmRhdGFbMF0udXJsLAogICAgICAgIHBpYzogb2JqLnBpYywKICAgICAgICBpZDogb2JqLmlkCiAgICAgIH0KICAgICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ25vd011c2ljJywgSlNPTi5zdHJpbmdpZnkobXVzaWMpKQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZGVhbEF1dG9QbGF5JywgbXVzaWMpCiAgICB9CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgdHJ5IHsKICAgICAgY29uc3QgdGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpCiAgICAgIGF3YWl0IHRoaXMuJHJlcXVlc3QuZ2V0KGBsb2dpbi9zdGF0dXM/dGltZXN0YW1wPSR7dGltZX1gKQogICAgICB0aGlzLmdldFJlY29tbWVuZExpc3QoKQogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+l5Yqf6IO96ZyA6KaB5YWI55m75b2VLOivt+WFiOeZu+W9lScpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["MusicList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MusicList.vue","sourceRoot":"src/components/music","sourcesContent":["<template>\n  <div>\n    <nav-header></nav-header>\n    <div class=\"main-nav\">\n      <div class=\"main-nav-tt\">\n        <img\n          src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3167851396,2438977824&fm=26&gp=0.jpg\"\n          alt\n        />\n        <div class=\"main-nav-text\">\n          <div class=\"main-tt-name\">每日推荐歌曲</div>\n          <div class=\"main-tt-label\">根据你的音乐口味自动生成，每天更新</div>\n          <div class=\"main-tt-btn\">\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-video-play\"\n              @click=\"playMusicAtonce(songsList)\"\n            >立即播放</el-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"main-song-list\">\n        <el-table :data=\"songsList\" style=\"width: 100%\" :stripe=\"true\" @row-click=\"getMusicUrl\">\n          <el-table-column type=\"index\" width=\"60px\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"音乐标题\"></el-table-column>\n          <el-table-column prop=\"author\" label=\"歌手\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <span v-for=\"(item,i) in scope.row.author\" :key=\"i\">{{item + ' '}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"album\" label=\"专辑\" width=\"180\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"时长\" width=\"100\"></el-table-column>\n        </el-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavHeader from '../common/Navheader.vue'\nexport default {\n  data() {\n    return {\n      songsList: []\n    }\n  },\n  components: {\n    'nav-header': NavHeader\n  },\n  methods: {\n    // 获取推荐表单歌曲列表\n    async getRecommendList() {\n      const { data: res } = await this.$request.get('recommend/songs')\n      const arrData = []\n      res.recommend.forEach(item => {\n        const arr = {}\n        arr.name = item.name\n        arr.author = []\n        item.artists.forEach(i => {\n          arr.author.push(i.name)\n        })\n        arr.id = item.id\n        arr.album = item.album.name\n        arr.pic = item.artists[0].picUrl\n        arr.time =\n          Math.floor((item.duration % 3600000) / 60000) > 10\n            ? Math.floor((item.duration % 3600000) / 60000)\n            : '0' + Math.floor((item.duration % 3600000) / 60000)\n        arr.time +=\n          ':' +\n          (Math.floor((item.duration % 60000) / 1000) > 10\n            ? Math.floor((item.duration % 60000) / 1000)\n            : '0' + Math.floor((item.duration % 60000) / 1000))\n        arrData.push(arr)\n      })\n      this.songsList = arrData\n    },\n    // 获取音乐播放地址\n    async getMusicUrl(obj) {\n      const { data: res } = await this.$request.get(`/song/url?id=${obj.id}`)\n      let music = {}\n      music = {\n        title: obj.name,\n        artist: obj.author.join(' '),\n        src: res.data[0].url,\n        pic: obj.pic,\n        id: obj.id\n      }\n      window.sessionStorage.setItem('nowMusic', JSON.stringify(music))\n      this.$store.dispatch('dealAutoPlay', music)\n    }\n  },\n  async mounted() {\n    try {\n      const time = new Date().getTime()\n      await this.$request.get(`login/status?timestamp=${time}`)\n      this.getRecommendList()\n    } catch (error) {\n      this.$message.error('该功能需要先登录,请先登录')\n    }\n  }\n}\n</script>\n<style>\n</style>\n"]}]}
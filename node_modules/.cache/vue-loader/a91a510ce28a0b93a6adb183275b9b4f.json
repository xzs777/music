{"remainingRequest":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\src\\components\\music\\Playlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\src\\components\\music\\Playlist.vue","mtime":1605172049975},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605024328000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (7)\\music-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1605024328000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZIZWFkZXIgZnJvbSAnLi4vY29tbW9uL05hdmhlYWRlci52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWRkRGlhbG9nVmlzaWJsZTpmYWxzZSwKICAgICAgTGlzdE5hbWU6ICcnLAogICAgICBjcmVhdGVpZDonJywKICAgICAgc29uZ3NMaXN0OiBbXSwKICAgICAgdXNlck11c2ljTGlzdDogWwogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICfmrYzljZUxJywvL+atjOWNleWQjQogICAgICAgICAgaWQ6ICcxJywvL+atjOWNlWlkCiAgICAgICAgICBjcmVhdGVpZDogJzEnLC8v5Yib5bu66ICFaWQKICAgICAgICAgIG11c2ljbGlzdDogW10sLy/pn7PkuZDliJfooagKICAgICAgICB9CiAgICAgIF0sCiAgICAgIGFkZEZvcm06ewogICAgICAgIGNob29zZTonJy8v6YCJ5oup55qE5q2M5Y2VCiAgICAgIH0KICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgICduYXYtaGVhZGVyJzogTmF2SGVhZGVyCiAgfSwKCiAgLy8g55uR5ZCsdnVleCDlvZPliY3mrYzljZVpZOaVsOaNruWPmOWMliDov5vooYzliJfooajliLfmlrAKICB3YXRjaDogewogICAgJyRzdG9yZS5zdGF0ZS50aGlzUGxheWxpc3RJZCc6IGZ1bmN0aW9uIChuZXdGbGFnLCBvbGRGbGFnKSB7CiAgICAgIGlmIChuZXdGbGFnICE9PSBvbGRGbGFnKSB7CiAgICAgICAgdGhpcy5nZXRQbGF5TGlzdCgpCiAgICAgIH0KICAgIH0KICB9LAoKICBtZXRob2RzOiB7CgoKICAgIC8vIOiOt+WPluatjOWNlQogICAgYXN5bmMgZ2V0UGxheUxpc3QoKSB7CgogICAgICBjb25zdCBpZCA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdwbGF5TGlzdElkJykvL+atjOWNlWlkCiAgICAgIHRoaXMuJHJlcXVlc3QuZ2V0KCdgZmRhc2ZzcGxheWxpc3QvZGV0YWlsP2lkPSR7aWR9YCcpLnRoZW4ocmVzID0+IHsKCiAgICAgICAgdGhpcy5jcmVhdGVpZCA9IHJlcy5jcmVhdGVpZC8v5Yib5bu66ICFaWQKICAgICAgICB0aGlzLkxpc3ROYW1lID0gcmVzLmRhdGEuTmFtZS8v5q2M5Y2V5ZCNCiAgICAgICAgY29uc3QgYXJyRGF0YSA9IFtdLy/ojrflj5bmrYzmm7LliJfooagKICAgICAgICByZXMuZGF0YS5NdXNpY2xpc3QuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgIGNvbnN0IGFyciA9IHt9CiAgICAgICAgICBhcnIubmFtZSA9IGl0ZW0ubmFtZS8v5q2M5puy5ZCNCiAgICAgICAgICBhcnIuYXV0aG9yID0gaXRlbS5hcnRpc3QvL+S9nOiAhQogICAgICAgICAgYXJyLmlkID0gaXRlbS5pZC8v5q2M5puyaWQKICAgICAgICAgIGFyci5hbGJ1bSA9IGl0ZW0uYWxidW0vL+S4k+i+keWQjQogICAgICAgICAgYXJyLnBpYyA9IGl0ZW0uY292ZXJ1cmwvL+WwgemdouWcsOWdgAogICAgICAgICAgYXJyLnNyYyA9IGl0ZW0uc3JjLy/mrYzmm7LlnLDlnYAKICAgICAgICAgIGFyckRhdGEucHVzaChhcnIpCiAgICAgICAgfSkKICAgICAgICB0aGlzLnNvbmdzTGlzdCA9IGFyckRhdGEKCiAgICAgIH0pLmNhdGNoKGVyciA9PiB7CgogICAgICAgIC8v5rWL6K+V5pWw5o2uCiAgICAgICAgdGhpcy5jcmVhdGVpZCA9ICcyJy8v5Yib5bu66ICFaWQKICAgICAgICB0aGlzLkxpc3ROYW1lID0gJ+atjOWNlTEnLy/mrYzljZXlkI0KCgogICAgICAgIGNvbnN0IGFyckRhdGEgPSBbXQogICAgICAgIAoKICAgICAgICBjb25zdCBhcnIxID0ge30KICAgICAgICBhcnIxLm5hbWUgPSAnbmFtZScKICAgICAgICBhcnIxLmF1dGhvciA9ICdhdXRob3InCiAgICAgICAgYXJyMS5pZCA9ICcxJwogICAgICAgIGFycjEuYWxidW0gPSAnYWxidW0nCiAgICAgICAgYXJyMS5waWMgPSAnY292ZXIxLmpwZycKICAgICAgICBhcnIxLnNyYyA9ICdtdXNpYzEubXAzJwogICAgICAgIGFyckRhdGEucHVzaChhcnIxKQoKICAgICAgICAvL+a1i+ivleaVsOaNrgogICAgICAgIGNvbnN0IGFycjIgPSB7fQogICAgICAgIGFycjIubmFtZSA9ICduYW1lJwogICAgICAgIGFycjIuYXV0aG9yID0gJ2F1dGhvcicKICAgICAgICBhcnIyLmlkID0gJzInCiAgICAgICAgYXJyMi5hbGJ1bSA9ICdhbGJ1bScKICAgICAgICBhcnIyLnBpYyA9ICdjb3ZlcjIuanBnJwogICAgICAgIGFycjIuc3JjID0gJ211c2ljMi5tcDMnCiAgICAgICAgYXJyRGF0YS5wdXNoKGFycjIpCgogICAgICAgIHRoaXMuc29uZ3NMaXN0ID0gYXJyRGF0YQoKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmnKrmib7liLDnm7jlupTmrYzmm7InKTsKICAgICAgICBjb25zb2xlLmxvZyh3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndXNlcklkJykpCiAgICAgIH0pCiAgICB9LAoKCiAgICAvLyDngrnlh7vmrYzljZXkuK3nmoTmrYzmm7Llubbmkq3mlL4KICAgIGFzeW5jIGdldE11c2ljVXJsKG9iaikgewogICAgICBsZXQgbXVzaWMgPSB7fQogICAgICBtdXNpYyA9IHsKICAgICAgICB0aXRsZTogb2JqLm5hbWUsCiAgICAgICAgYXJ0aXN0OiBvYmouYXV0aG9yLAogICAgICAgIHBpYzogcmVxdWlyZSgnQC9zdG9yZS9jb3ZlcnMvJyArIG9iai5waWMpLCAgIC8vIGNvdmVyMS5qcGcKICAgICAgICBzcmM6IHJlcXVpcmUoJ0Avc3RvcmUvbXVzaWNmaWxlcy8nICsgb2JqLnNyYyksLy8gbXVzaWMxLnNyYwogICAgICAgIGlkOiBvYmouaWQKICAgICAgfQogICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnbm93TXVzaWMnLCBKU09OLnN0cmluZ2lmeShtdXNpYykpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdkZWFsQXV0b1BsYXknLCBtdXNpYykKICAgIH0sCgoKICAgIC8v6I635Y+W55So5oi35Yib5bu655qE5q2M5Y2VCiAgICBnZXR1c2VyTXVzaWNMaXN0KCkgewogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gdGhpcy4kcmVxdWVzdC5nZXQoKQogICAgICB0aGlzLnVzZXJNdXNpY0xpc3QgPSByZXMuZGF0YTsKICAgIH0sCgogICAgLy/liKDpmaToh6rlt7HmrYzljZXkuK3nmoTmrYzmm7IgIG11c2ljaWQtLeatjOabsmlkCiAgICBhc3luYyBkZWxldGVNdXNpY0Zyb21MaXN0KG11c2ljaWQpIHsKICAgICAgY29uc3QgaWQgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncGxheUxpc3RJZCcpLy/mrYzljZVpZAogICAgICB0aGlzLiRyZXF1ZXN0LmdldCgnYGZkYXNmc3BsYXlsaXN0L2RldGFpbD9pZD0ke2lkfWAnKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5oiQ5YqfJyk7ICAgICAgICAKICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKUnKTsKICAgICAgfSkKICAgIH0sCgoKICAgIC8v5Yik5pat5piv5ZCm5Li66Ieq5bex5Yib5bu655qE5q2M5Y2VCiAgICAvL+S4jeaYr+iHquW3seWIm+W7uueahOS4jeiDveWIoOmZpOmHjOmdoueahOatjOabsuaIluWIoOmZpOatjOWNlQogICAgaXNNeUxpc3QoKXsKICAgICAgcmV0dXJuIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VySWQnKT09dGhpcy5jcmVhdGVpZDsKICAgIH0sCgoKICAgIC8v5Yig6Zmk5q2M5Y2V77yI5Y+q6IO95Yig6Zmk6Ieq5bex55qE5q2M5Y2V77yJCiAgICBkZWxldGVNeUxpc3QoKXsKICAgICAgY29uc3QgaWQgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncGxheUxpc3RJZCcpLy/ojrflj5bmrYzljZVpZAogICAgICB0aGlzLiRyZXF1ZXN0LmdldCgnYGZkYXNmc3BsYXlsaXN0L2RldGFpbD9pZD0ke2lkfWAnKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5oiQ5YqfJyk7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJ211c2ljJyk7ICAgICAgICAKICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKUnKTsKICAgICAgICAvL+WIoOmZpOWQjui/lOWbngogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCdtdXNpYycpOwogICAgICB9KSAgIAogICAgfSwKCiAgICAKCgogICAgLy/mlLbol4/mrYzljZUo5Y+q6IO95pS26JeP5Yir5Lq655qE5q2M5Y2VKQogICAgYWRkVG9NeUxpc3QoKXsKICAgICAgY29uc3QgaWQgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncGxheUxpc3RJZCcpLy/ojrflj5bmrYzljZVpZAogICAgICBjb25zdCB1c2VySWQgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndXNlcklkJykvL+iOt+WPlueUqOaIt2lkCgogICAgICB0aGlzLiRyZXF1ZXN0LmdldCgnYGZkYXNmc3BsYXlsaXN0L2RldGFpbD9pZD0ke2lkfWAnKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5pS26JeP5oiQ5YqfJyk7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJ211c2ljJyk7ICAgICAgICAKICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmlLbol4/lpLHotKUnKTsKICAgICAgfSkgCiAgICB9LAoKCiAgICAvLyAvL+aJk+W8gOaUtuiXj+WvueivneahhgogICAgLy8gb3BlbkRpYWxvZygpewogICAgLy8gICAvL+iOt+WPlueUqOaIt+WIm+W7uueahOatjOWNlQogICAgLy8gICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gdGhpcy4kcmVxdWVzdC5nZXQoKQogICAgLy8gICB0aGlzLnVzZXJNdXNpY0xpc3QgPSByZXMuZGF0YTsKICAgIC8vICAgdGhpcy5hZGREaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIC8vIH0KCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRQbGF5TGlzdCgpCiAgfQp9Cg=="},{"version":3,"sources":["Playlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Playlist.vue","sourceRoot":"src/components/music","sourcesContent":["<template>\n  <div>\n    <nav-header></nav-header>\n    <div class=\"main-nav\">\n      <div class=\"main-nav-tt\">\n        <!-- <img :src=\"userMsg.pic\" alt /> -->\n        <div class=\"main-nav-text\">\n          <div class=\"main-tt-name\">\n            <span>歌单</span>\n            歌单名\n          </div>\n          <!-- <div class=\"main-tt-label\">\n            <span style=\"color:#416bc8\">{{userMsg.author}}</span>\n            &nbsp;&nbsp;&nbsp;{{userMsg.time| dataFormat}}\n          </div>\n          <div class=\"main-tt-label\">\n            标签:\n            <span v-for=\"(item,i) in userMsg.tag\" :key=\"i\">{{item + \" \"}}</span>\n          </div>\n          <div class=\"main-tt-label\">描述: {{userMsg.discription}}</div> -->\n          <div class=\"main-tt-btn\">\n            \n            <el-button type=\"danger\" size=\"small\"icon=\"el-icon-video-play\" @click=\"playMusicAtonce(songsList)\">立即播放</el-button>\n\n            <!-- 只能删除自己的歌单 -->\n            <el-button type=\"danger\" size=\"small\"icon=\"el-icon-delete\" @click=\"deleteMyList\" v-if=\"isMyList()\">删除歌单</el-button>\n\n            <!-- 只能收藏别人的歌单 -->\n            <el-button type=\"danger\" size=\"small\"icon=\"el-icon-folder-add\" @click=\"addToMyList\" v-if=\"!isMyList()\">收藏歌单</el-button>\n\n          </div>\n        </div>\n      </div>\n      <div class=\"main-song-list\">\n        <el-table :data=\"songsList\" style=\"width: 100%;\" :stripe=\"true\" @row-click=\"getMusicUrl\" :show-header=\"false\">\n          <el-table-column type=\"index\" width=\"60px\"></el-table-column>\n          <el-table-column prop=\"\" label=\"封面\">\n            <template slot-scope=\"scoped\">\n              <div class=\"music-img-title\">\n                <!-- 封面图片 -->\n                <el-image :src=\"require('@/store/covers/'+scoped.row.pic)\"\n                  style=\"width: 50px ; height: 50px;border-radius: 4px;margin-right: 10px;\">\n                  <div slot=\"placeholder\" class=\"image-slot\">\n                    <i class=\"el-icon-picture\" style=\"font-size:50px;color:#f1f1f1\"></i>\n                  </div>\n                </el-image>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"歌曲名\">\n          </el-table-column>\n          <el-table-column prop=\"author\" label=\"歌手\" width=\"180\">\n          </el-table-column>\n          <el-table-column prop=\"album\" label=\"专辑\" width=\"180\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"\" width=\"80\" v-if=\"isMyList()\">\n            <template slot-scope=\"scope\">\n              <!-- 删除歌曲 -->\n              <el-button type=\"danger\" icon=\"el-icon-delete\" circle size=\"mini\"\n                @click=\"deleteMusicFromList(scope.row.id)\"></el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </div>\n\n    <!-- 选择收藏对话框 -->\n    <!-- <el-dialog title=\"选择歌单\" :visible.sync=\"addDialogVisible\" width=\"30%\" @close=\"loginDialogClose\">\n      <el-form :model=\"addForm\" status-icon :rules=\"addRules\" ref=\"addRef\" label-width=\"60px\">\n        <el-form-item label=\"歌单\">\n          <el-select v-model=\"addForm.choose\"  placeholder=\"请选择歌单\">\n            <el-option v-for=\"(item, i) in userMusicList\" label=\"item.name\" value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"danger\" @click=\"addToMyList()\">确 定</el-button>\n      </span>\n    </el-dialog> -->\n\n\n  </div>\n</template>\n\n<script>\n  import NavHeader from '../common/Navheader.vue'\n  export default {\n    data() {\n      return {\n        addDialogVisible:false,\n        ListName: '',\n        createid:'',\n        songsList: [],\n        userMusicList: [\n          {\n            name: '歌单1',//歌单名\n            id: '1',//歌单id\n            createid: '1',//创建者id\n            musiclist: [],//音乐列表\n          }\n        ],\n        addForm:{\n          choose:''//选择的歌单\n        }\n      }\n    },\n    components: {\n      'nav-header': NavHeader\n    },\n\n    // 监听vuex 当前歌单id数据变化 进行列表刷新\n    watch: {\n      '$store.state.thisPlaylistId': function (newFlag, oldFlag) {\n        if (newFlag !== oldFlag) {\n          this.getPlayList()\n        }\n      }\n    },\n\n    methods: {\n\n\n      // 获取歌单\n      async getPlayList() {\n\n        const id = window.sessionStorage.getItem('playListId')//歌单id\n        this.$request.get('`fdasfsplaylist/detail?id=${id}`').then(res => {\n\n          this.createid = res.createid//创建者id\n          this.ListName = res.data.Name//歌单名\n          const arrData = []//获取歌曲列表\n          res.data.Musiclist.forEach(item => {\n            const arr = {}\n            arr.name = item.name//歌曲名\n            arr.author = item.artist//作者\n            arr.id = item.id//歌曲id\n            arr.album = item.album//专辑名\n            arr.pic = item.coverurl//封面地址\n            arr.src = item.src//歌曲地址\n            arrData.push(arr)\n          })\n          this.songsList = arrData\n\n        }).catch(err => {\n\n          //测试数据\n          this.createid = '2'//创建者id\n          this.ListName = '歌单1'//歌单名\n\n\n          const arrData = []\n          \n\n          const arr1 = {}\n          arr1.name = 'name'\n          arr1.author = 'author'\n          arr1.id = '1'\n          arr1.album = 'album'\n          arr1.pic = 'cover1.jpg'\n          arr1.src = 'music1.mp3'\n          arrData.push(arr1)\n\n          //测试数据\n          const arr2 = {}\n          arr2.name = 'name'\n          arr2.author = 'author'\n          arr2.id = '2'\n          arr2.album = 'album'\n          arr2.pic = 'cover2.jpg'\n          arr2.src = 'music2.mp3'\n          arrData.push(arr2)\n\n          this.songsList = arrData\n\n          this.$message.error('未找到相应歌曲');\n          console.log(window.sessionStorage.getItem('userId'))\n        })\n      },\n\n\n      // 点击歌单中的歌曲并播放\n      async getMusicUrl(obj) {\n        let music = {}\n        music = {\n          title: obj.name,\n          artist: obj.author,\n          pic: require('@/store/covers/' + obj.pic),   // cover1.jpg\n          src: require('@/store/musicfiles/' + obj.src),// music1.src\n          id: obj.id\n        }\n        window.sessionStorage.setItem('nowMusic', JSON.stringify(music))\n        this.$store.dispatch('dealAutoPlay', music)\n      },\n\n\n      //获取用户创建的歌单\n      getuserMusicList() {\n        const { data: res } = this.$request.get()\n        this.userMusicList = res.data;\n      },\n\n      //删除自己歌单中的歌曲  musicid--歌曲id\n      async deleteMusicFromList(musicid) {\n        const id = window.sessionStorage.getItem('playListId')//歌单id\n        this.$request.get('`fdasfsplaylist/detail?id=${id}`').then(res => {\n          this.$message.error('删除成功');        \n        }).catch(err => {\n          this.$message.error('删除失败');\n        })\n      },\n\n\n      //判断是否为自己创建的歌单\n      //不是自己创建的不能删除里面的歌曲或删除歌单\n      isMyList(){\n        return window.sessionStorage.getItem('userId')==this.createid;\n      },\n\n\n      //删除歌单（只能删除自己的歌单）\n      deleteMyList(){\n        const id = window.sessionStorage.getItem('playListId')//获取歌单id\n        this.$request.get('`fdasfsplaylist/detail?id=${id}`').then(res => {\n          this.$message.error('删除成功');\n          this.$router.push('music');        \n        }).catch(err => {\n          this.$message.error('删除失败');\n          //删除后返回\n          this.$router.push('music');\n        })   \n      },\n\n      \n\n\n      //收藏歌单(只能收藏别人的歌单)\n      addToMyList(){\n        const id = window.sessionStorage.getItem('playListId')//获取歌单id\n        const userId = window.sessionStorage.getItem('userId')//获取用户id\n\n        this.$request.get('`fdasfsplaylist/detail?id=${id}`').then(res => {\n          this.$message.error('收藏成功');\n          this.$router.push('music');        \n        }).catch(err => {\n          this.$message.error('收藏失败');\n        }) \n      },\n\n\n      // //打开收藏对话框\n      // openDialog(){\n      //   //获取用户创建的歌单\n      //   const { data: res } = this.$request.get()\n      //   this.userMusicList = res.data;\n      //   this.addDialogVisible = true;\n      // }\n\n    },\n    created() {\n      this.getPlayList()\n    }\n  }\n</script>\n<style lang=\"less\" scoped>\n  .main-nav .main-nav-tt img {\n    width: 130px !important;\n    height: 130px !important;\n  }\n\n  .main-nav .main-tt-name {\n    display: flex;\n    align-items: center;\n  }\n\n  .main-nav .main-tt-name span {\n    border: 2px solid red;\n    font-weight: 600;\n    margin-right: 10px;\n    border-radius: 4px;\n    color: red;\n    padding: 0px 10px;\n    font-size: 12px;\n    display: inline-block;\n    height: 18px;\n    line-height: 18px;\n  }\n\n  .main-nav .main-nav-tt .main-tt-label {\n    height: 20px;\n    line-height: 20px;\n    color: rgba(0, 0, 0, 0.6);\n    font-weight: 600;\n    max-width: 300px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  .main-nav .main-nav-tt .main-tt-btn {\n    margin-top: 10px;\n  }\n</style>"]}]}
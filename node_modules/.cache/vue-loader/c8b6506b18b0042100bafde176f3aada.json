{"remainingRequest":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\src\\components\\music\\Playlist.vue?vue&type=style&index=0&id=0bb296ac&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\src\\components\\music\\Playlist.vue","mtime":1593438612000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\74031\\Desktop\\新建文件夹 (4)\\vue_music-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWFpbi1uYXYgLm1haW4tbmF2LXR0IGltZyB7CiAgd2lkdGg6IDEzMHB4ICFpbXBvcnRhbnQ7CiAgaGVpZ2h0OiAxMzBweCAhaW1wb3J0YW50Owp9Ci5tYWluLW5hdiAubWFpbi10dC1uYW1lIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLm1haW4tbmF2IC5tYWluLXR0LW5hbWUgc3BhbiB7CiAgYm9yZGVyOiAycHggc29saWQgcmVkOwogIGZvbnQtd2VpZ2h0OiA2MDA7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjb2xvcjogcmVkOwogIHBhZGRpbmc6IDBweCAxMHB4OwogIGZvbnQtc2l6ZTogMTJweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgaGVpZ2h0OiAxOHB4OwogIGxpbmUtaGVpZ2h0OiAxOHB4Owp9Ci5tYWluLW5hdiAubWFpbi1uYXYtdHQgLm1haW4tdHQtbGFiZWwgewogIGhlaWdodDogMjBweDsKICBsaW5lLWhlaWdodDogMjBweDsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjYpOwogIGZvbnQtd2VpZ2h0OiA2MDA7CiAgbWF4LXdpZHRoOiAzMDBweDsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLm1haW4tbmF2IC5tYWluLW5hdi10dCAubWFpbi10dC1idG4gewogIG1hcmdpbi10b3A6IDEwcHg7Cn0K"},{"version":3,"sources":["Playlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Playlist.vue","sourceRoot":"src/components/music","sourcesContent":["<template>\n  <div>\n    <nav-header></nav-header>\n    <div class=\"main-nav\">\n      <div class=\"main-nav-tt\">\n        <img :src=\"userMsg.pic\" alt />\n        <div class=\"main-nav-text\">\n          <div class=\"main-tt-name\">\n            <span>歌单</span>\n            {{userMsg.name}}\n          </div>\n          <div class=\"main-tt-label\">\n            <span style=\"color:#416bc8\">{{userMsg.author}}</span>\n            &nbsp;&nbsp;&nbsp;{{userMsg.time| dataFormat}}\n          </div>\n          <div class=\"main-tt-label\">\n            标签:\n            <span v-for=\"(item,i) in userMsg.tag\" :key=\"i\">{{item + \" \"}}</span>\n          </div>\n          <div class=\"main-tt-label\">描述: {{userMsg.discription}}</div>\n          <div class=\"main-tt-btn\">\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-video-play\"\n              @click=\"playMusicAtonce(songsList)\"\n            >立即播放</el-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"main-song-list\">\n        <el-table :data=\"songsList\" style=\"width: 100%\" :stripe=\"true\" @row-click=\"getMusicUrl\">\n          <el-table-column type=\"index\" width=\"60px\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"音乐标题\"></el-table-column>\n          <el-table-column prop=\"author\" label=\"歌手\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <span v-for=\"(item,i) in scope.row.author\" :key=\"i\">{{item + ' '}}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"album\" label=\"专辑\" width=\"180\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"时长\" width=\"100\"></el-table-column>\n        </el-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavHeader from '../common/Navheader.vue'\nexport default {\n  data() {\n    return {\n      userMsg: {\n        pic: '',\n        author: '',\n        time: '',\n        name: '',\n        discription: '',\n        tag: []\n      },\n      songsList: []\n    }\n  },\n  components: {\n    'nav-header': NavHeader\n  },\n  // 监听vuex 当前歌单id数据变化 进行列表刷新\n  watch: {\n    '$store.state.thisPlaylistId': function(newFlag, oldFlag) {\n      if (newFlag !== oldFlag) {\n        this.getPlayList()\n      }\n    }\n  },\n  methods: {\n    // 获取歌单\n    async getPlayList() {\n      const id = window.sessionStorage.getItem('playListId')\n      const { data: res } = await this.$request.get(`playlist/detail?id=${id}`)\n      // 获取发布者信息部分\n      const userData = {\n        pic: res.playlist.coverImgUrl,\n        name: res.playlist.name,\n        discription: res.playlist.description,\n        tag: res.playlist.tags,\n        author: res.playlist.creator.nickname,\n        time: res.playlist.updateTime\n      }\n      this.userMsg = userData\n      const arrData = []\n      // 获取歌曲部分\n      res.playlist.tracks.forEach(item => {\n        const arr = {}\n        arr.name = item.name\n        arr.author = []\n        item.ar.forEach(i => {\n          arr.author.push(i.name)\n        })\n        arr.id = item.id\n        arr.album = item.al.name\n        arr.pic = item.al.picUrl\n        arr.time =\n          Math.floor((item.dt % 3600000) / 60000) > 10\n            ? Math.floor((item.dt % 3600000) / 60000)\n            : '0' + Math.floor((item.dt % 3600000) / 60000)\n        arr.time +=\n          ':' +\n          (Math.floor((item.dt % 60000) / 1000) > 10\n            ? Math.floor((item.dt % 60000) / 1000)\n            : '0' + Math.floor((item.dt % 60000) / 1000))\n        arrData.push(arr)\n      })\n      this.songsList = arrData\n    },\n    // 获取歌曲地址\n    async getMusicUrl(obj) {\n      const { data: res } = await this.$request.get(`/song/url?id=${obj.id}`)\n      let music = {}\n      music = {\n        title: obj.name,\n        artist: obj.author.join(' '),\n        src: res.data[0].url,\n        pic: obj.pic,\n        id: obj.id\n      }\n      window.sessionStorage.setItem('nowMusic', JSON.stringify(music))\n      this.$store.dispatch('dealAutoPlay', music)\n    }\n  },\n  created() {\n    this.getPlayList()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.main-nav .main-nav-tt img {\n  width: 130px !important;\n  height: 130px !important;\n}\n.main-nav .main-tt-name {\n  display: flex;\n  align-items: center;\n}\n.main-nav .main-tt-name span {\n  border: 2px solid red;\n  font-weight: 600;\n  margin-right: 10px;\n  border-radius: 4px;\n  color: red;\n  padding: 0px 10px;\n  font-size: 12px;\n  display: inline-block;\n  height: 18px;\n  line-height: 18px;\n}\n.main-nav .main-nav-tt .main-tt-label {\n  height: 20px;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.6);\n  font-weight: 600;\n  max-width: 300px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.main-nav .main-nav-tt .main-tt-btn {\n  margin-top: 10px;\n}\n</style>\n"]}]}